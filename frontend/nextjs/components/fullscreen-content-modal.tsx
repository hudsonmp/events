"use client"

import { X } from "lucide-react"
import { motion, AnimatePresence } from "framer-motion"

interface FullscreenContentModalProps {
  isOpen: boolean
  onClose: () => void
  title: string
  content: string
  contentType: string
}

export default function FullscreenContentModal({
  isOpen,
  onClose,
  title,
  content,
  contentType
}: FullscreenContentModalProps) {
  if (!isOpen) return null

  return (
    <AnimatePresence>
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
        className="fixed inset-0 z-50 bg-black bg-opacity-75 flex items-center justify-center p-4"
        onClick={onClose}
      >
        <motion.div
          initial={{ scale: 0.9, opacity: 0 }}
          animate={{ scale: 1, opacity: 1 }}
          exit={{ scale: 0.9, opacity: 0 }}
          className="bg-white rounded-lg shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-hidden"
          onClick={(e) => e.stopPropagation()}
        >
          {/* Header */}
          <div className="flex items-center justify-between p-6 border-b border-gray-200">
            <div>
              <h2 className="text-2xl font-bold text-gray-900">{title}</h2>
              <p className="text-sm text-gray-500 capitalize">{contentType.replace('_', ' ')}</p>
            </div>
            <button
              onClick={onClose}
              className="p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              <X className="w-6 h-6 text-gray-600" />
            </button>
          </div>

          {/* Content */}
          <div className="p-6 overflow-y-auto max-h-[calc(90vh-120px)]">
            <div className="prose prose-lg max-w-none">
              {/* Parse and format the content */}
              {content.split('\n').map((line, index) => {
                // Handle headers
                if (line.startsWith('**') && line.endsWith('**')) {
                  return (
                    <h3 key={index} className="text-xl font-bold text-gray-900 mt-6 mb-3">
                      {line.replace(/\*\*/g, '')}
                    </h3>
                  )
                }
                
                // Handle numbered lists
                if (/^\d+\./.test(line)) {
                  return (
                    <div key={index} className="flex items-start mt-2">
                      <span className="font-semibold text-gray-700 mr-3 min-w-[2rem]">
                        {line.match(/^\d+/)?.[0]}.
                      </span>
                      <span className="text-gray-800">{line.replace(/^\d+\.\s*/, '')}</span>
                    </div>
                  )
                }
                
                // Handle bullet points
                if (line.startsWith('•') || line.startsWith('-')) {
                  return (
                    <div key={index} className="flex items-start mt-2">
                      <span className="text-gray-700 mr-3">•</span>
                      <span className="text-gray-800">{line.replace(/^[•-]\s*/, '')}</span>
                    </div>
                  )
                }
                
                // Handle bold text within lines
                if (line.includes('**')) {
                  const parts = line.split(/(\*\*.*?\*\*)/g)
                  return (
                    <p key={index} className="mt-2 text-gray-800">
                      {parts.map((part, partIndex) => {
                        if (part.startsWith('**') && part.endsWith('**')) {
                          return (
                            <strong key={partIndex} className="font-semibold text-gray-900">
                              {part.replace(/\*\*/g, '')}
                            </strong>
                          )
                        }
                        return part
                      })}
                    </p>
                  )
                }
                
                // Handle empty lines
                if (line.trim() === '') {
                  return <div key={index} className="h-4" />
                }
                
                // Regular text
                return (
                  <p key={index} className="mt-2 text-gray-800">
                    {line}
                  </p>
                )
              })}
            </div>
          </div>

          {/* Footer */}
          <div className="p-6 border-t border-gray-200 bg-gray-50">
            <div className="flex items-center justify-between">
              <p className="text-sm text-gray-600">
                Generated by Henry AI Club
              </p>
              <button
                onClick={onClose}
                className="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors"
              >
                Close
              </button>
            </div>
          </div>
        </motion.div>
      </motion.div>
    </AnimatePresence>
  )
}
